#!/bin/bash
#	copy-client-remote-host	3.1	2017-12-19_15:32:23_CST utwo two.cptx86.com
#	Adding version number and upload latest
# %W% %G% %U%
#       set -x
#       set -v
#
#       Copy public and private key and CA for client to remote host
#               
CLIENT=$1
REMOTEHOST=$2
cd $HOME/.docker/docker-ca
if [ -z $CLIENT ]
then
        echo "Enter user name needing new TLS keys:"
        read CLIENT
fi
if [ -z $REMOTEHOST ]
then
        echo "Enter remote host to copy TLS keys:"
        read REMOTEHOST
fi
if [ -a "./.private/ca-priv-key.pem" ]
then
        echo ">>        The $HOME/.docker/docker-ca/.private/ directory found."
else
        echo ">>>       ERR Private key not found ($HOME/.docker/docker-ca/.private/ca-priv-key.pem) <<<"
        exit
fi
if [ -n $CLIENT ]
then
	echo -e "\n>>   Create directory, change permissions, and copy ca.pem TLS Key to $CLIENT@$REMOTEHOST.\n"
	ssh $CLIENT@$REMOTEHOST mkdir -pv ~$CLIENT/.docker
	ssh $CLIENT@$REMOTEHOST chmod -v 700 ~$CLIENT/.docker
	scp -p ca.pem $CLIENT@$REMOTEHOST:~$CLIENT/.docker
	echo -e "\n>> Copy the key pair files signed by the CA $REMOTEHOST:~$CLIENT/.docker.\n"
	scp -p $CLIENT-client-cert.pem $CLIENT@$REMOTEHOST:~$CLIENT/.docker
	scp -p $CLIENT-client-priv-key.pem $CLIENT@$REMOTEHOST:~$CLIENT/.docker
	echo -e "\nCreate symbolic links to point to the default Docker TLS file names.\n"
	ssh $CLIENT@$REMOTEHOST ln -vs ~$CLIENT/.docker/$CLIENT-client-cert.pem ~$CLIENT/.docker/cert.pem
	ssh $CLIENT@$REMOTEHOST ln -vs ~$CLIENT/.docker/$CLIENT-client-priv-key.pem ~$CLIENT/.docker/key.pem
fi
