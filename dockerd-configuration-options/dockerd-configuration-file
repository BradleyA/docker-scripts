###	Custom_dockerd_Configuration_File
#	dockerd-configuration-file  3.29.366  2018-06-23_14:19:13_CDT  https://github.com/BradleyA/docker-scripts  uadmin  six-rpi3b.cptx86.com 3.28-24-g96ea7aa  
#	   modify comment line 
#
#	DO NOT REMOVE OR CHANGE FIRST LINE ###     Custom_dockerd_Configuration_File
#
##### 	Date last modified:	1/22/2018
#       
#       After modifying this file, edit /etc/docker/dockerd-configuration-file
#       Run sudo /etc/docker/setup-dockerd.sh
#	   To move your changes into
#	   /etc/systemd/system/docker.service.d/10-override.conf file (Ubuntu 16.04, systemd)
#	   and /etc/default/docker file (Ubuntu 14.04, Upstart).
#
#####	Do any local configuration here
#
### Use DOCKER_OPTS to modify the daemon startup options.
#
#   Enable debug mode. Default is false
#       --debug=true
#   IPv4 address of the container default gateway; this address must be part of the bridge subnet (which is defined by -b or --bip)
#       --default-gateway=""
# * Path to use as the root of the Docker runtime. Default is /var/lib/docker
#       --data-root=""
# * Force Docker to use specific DNS servers
#       --dns
#   Enable the daemon experimental features.dd
#       --experimental=""
# * The socket(s) to bind to in daemon mode specified using one or more tcp://host:port, unix:///path/to/socket, fd://* or fd://socketfd.
#       -H, --host=[unix:///var/run/docker.sock]: tcp://[host:port] to bind or unix://[/path/to/socket] to use.
# * Set key=value labels to the daemon (displayed in docker info)
#		Needed to add awk because some hosts (rpi) have more than one IP address (en, wlan)
#	--label="[]"  XIPADDRESS=`hostname --ip-address | awk '{ print $1 }'`
#	Not working on docker 18.01.0-ce
#		--label XRELEASE=`docker version | grep -m 1 Version: |  awk '{ print $2 }'` \
#	takes to long during boot to set variable XPROCESSOR
#	--label XPROCESSOR=`lshw | grep "^${XHOST}" -A2 | grep product | head -1 | sed -e 's/ /_/g' | sed -e 's/__*/_/g' | sed -e 's/^_product:_//'` \
#   Enable live restore of running containers when the daemon starts so that they are not restarted. The live restore option is not compatible with Docker Engine swarm mode.
#       --live-restore=false
# * Set the logging level. Default is info.
#       --log-level="debug|info|warn|error|fatal"
# * Default driver for container logs. Default is json-file.  Warning: docker logs command works only for json-file logging driver.
#       --log-driver="json-file|syslog|journald|gelf|fluentd|awslogs|splunk|etwlogs|gcplogs|none"
# * Logging driver specific options.
#       --log-opt=[]
#   Path to use for daemon PID file. Default is /var/run/docker.pid
#       -p, --pidfile=""
#   Force the Docker runtime to use a specific storage driver. Currently default on Ubuntu AUFS
#       --storage-driver=overlay
#         >>>>    Docker Daemon has more performance due the overlay2 storage, check to see if the directory changes from aufs to overlay2 (/usr/local/docker/362144.362144/aufs) which would be why all the images and container disappear because they are in the other directory.  If moving to overlay2 clear out the old directories try docker system pruge or something like that
#       --storage-driver=overlay2
# * Use TLS and verify the remote (daemon: verify client, client: verify daemon).  Default is false.
#       --tlsverify=true|false
#   Use TLS; implied by --tlsverify. Default is false.
#       --tls=true|false
# * Trust certs signed only by this CA.
#       --tlscacert= /.docker/ca.pem
# * Path to TLS certificate file.
#       --tlscert= /.docker/cert.pem
# * Path to TLS key file.
#       --tlskey= /.docker/key.pem
# * Enable user namespaces for containers on the daemon. Specifying "default" will cause a new user and group to be created to handle
#   UID and GID range remapping for the user namespace mappings used for contained processes.
#       --userns-remap=default|uid:gid|user:group|user|uid
###
DOCKER_OPTS="\
        --data-root=/usr/local/docker \
        --dns 192.168.1.202 \
        --dns 8.8.8.8 \
        --dns 8.8.4.4 \
        --host=`hostname --fqdn`:2376 \
        --label XHOST=`hostname` \
        --label XHOSTFQDN=`hostname --fqdn` \
        --label XIPADDRESS=`hostname --ip-address | awk '{ print $1 }'` \
        --label XOS=`lsb_release -d | awk '{ print $2"-"$3"-"$4 }'` \
        --label XCPUARCHITECTURE=`lscpu | grep "Architecture" | awk '{ print $2 }'` \
        --label XCPUAMOUNT=`lscpu | grep "^CPU(s):" | awk '{ print $2 }'` \
        --label XSECURITY=namespace-control \
        --log-level warn \
        --log-driver=json-file \
        --log-opt max-size=5m \
        --log-opt max-file=7 \
        --log-opt labels=host,ip,gateway,id \
        --tlsverify \
        --tlscacert=/etc/docker/certs.d/daemon/ca.pem \
        --tlscert=/etc/docker/certs.d/daemon/`hostname --fqdn`-cert.pem \
        --tlskey=/etc/docker/certs.d/daemon/`hostname --fqdn`-priv-key.pem \
        --userns-remap=default \
        "
###
