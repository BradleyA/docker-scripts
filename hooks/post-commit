#!/bin/bash
#	hooks/post-commit  3.346.813  2019-07-26T22:39:09.699773-05:00 (CDT)  https://github.com/BradleyA/docker-security-infrastructure  uadmin  six-rpi3b.cptx86.com 3.345  
#	   testing post-commit .git/hook for FVT 
#	hooks/post-commit  3.345.812  2019-07-26T22:24:32.460213-05:00 (CDT)  https://github.com/BradleyA/docker-security-infrastructure  uadmin  six-rpi3b.cptx86.com 3.344  
#	   testing post-commit .git/hook for FVT 
#	hooks/post-commit  3.343.810  2019-07-26T22:12:14.587205-05:00 (CDT)  https://github.com/BradleyA/docker-security-infrastructure  uadmin  six-rpi3b.cptx86.com 3.342  
#	   testing post-commit .git/hook for FVT 
#	hooks/post-commit  3.320.787  2019-07-26T19:58:47.273386-05:00 (CDT)  https://github.com/BradleyA/docker-security-infrastructure  uadmin  six-rpi3b.cptx86.com 3.319  
#	   testing hooks pre-commit and post-commit #57 
#	hooks/post-commit  3.309.776  2019-07-26T15:15:00.108370-05:00 (CDT)  https://github.com/BradleyA/docker-security-infrastructure  uadmin  six-rpi3b.cptx86.com 3.308  
#	   determine how to parse FILE_LIST #57 
###
### production standard 3.0 shellcheck
### production standard 5.1.160 Copyright
#       Copyright (c) 2019 Bradley Allen
#       MIT License is in the online DOCUMENTATION, DOCUMENTATION URL defined below.
### production standard 1.0 DEBUG variable
#       Order of precedence: environment variable, default code
if [ "${DEBUG}" == "" ] ; then DEBUG="0" ; fi   # 0 = debug off, 1 = debug on, 'export DEBUG=1', 'unset DEBUG' to unset environment variable (bash)
###

echo "GIT_AUTHOR_DATE >${GIT_AUTHOR_DATE}<"
echo "GIT_AUTHOR_NAME >${GIT_AUTHOR_NAME}<"
echo "GIT_AUTHOR_EMAIL >${GIT_AUTHOR_EMAIL}<"
echo "GIT_REFLOG_ACTION >${GIT_REFLOG_ACTION}<"
echo "GIT_INDEX_FILE >${GIT_INDEX_FILE}<"

echo "\$GIT_DIR >${GIT_DIR}<"
echo "\$(git rev-parse --git-dir) >$(git rev-parse --git-dir)<"
echo "\$(git rev-parse --show-toplevel) >$(git rev-parse --show-toplevel)<"

echo "pwd >$(pwd)<"

echo "GIT_WORK_TREE >${GIT_WORK_TREE}<"

hook="$(git rev-parse --git-path hooks/post-commit)"
echo "hook >${hook}<"

#       Date and time function ISO 8601
get_date_stamp() {
DATE_STAMP=$(date +%Y-%m-%dT%H:%M:%S.%6N%:z)
TEMP=$(date +%Z)
DATE_STAMP="${DATE_STAMP} (${TEMP})"
}

#       Fully qualified domain name FQDN hostname
LOCALHOST=$(hostname -f)

###
WORKING_DIRECTORY=$(git rev-parse --show-toplevel)
FILE_LIST=$(cat "${WORKING_DIRECTORY}"/hooks/FILE_LIST)

echo -e "\${FILE_LIST} >${FILE_LIST}<\n\n"

#	wrong ssh/check-user-ssh.sh/TEST
#       Mark each file
for FILE_NAME in ${FILE_LIST} ; do
	echo "\${FILE_NAME} >${FILE_NAME}<"
	TMP_FILE=$(echo ${FILE_NAME} | rev | cut -d '/' -f 1 | rev)
	echo "\${TMP_FILE} >${TMP_FILE}<"
	TMP_DIR=$(echo ${FILE_NAME} | cut -d '/' -f 1 )
	echo "\${TMP_DIR} >${TMP_DIR}<"
	echo "\${TMP_DIR}/TEST/\${TMP_FILE} >${TMP_DIR}/TEST/${TMP_FILE}<"

	if [ -d ${TMP_DIR}/TEST/${TMP_FILE} ] ; then
		get_date_stamp ; echo -e "${DATE_STAMP} ${LOCALHOST} ${0}[$$] ${LINENO} Located ${TMP_DIR}/TEST/${TMP_FILE} directory in ${WORKING_DIRECTORY} for ${GIT_AUTHOR_NAME} (${USER})."
		FVT_TEST_CASES=$(ls -1 ${TMP_DIR}/TEST/${TMP_FILE} | grep -v "\." | grep FVT)
		echo "\${FVT_TEST_CASES} >${FVT_TEST_CASES}<"
		### >>>	need an if to check is three are FVT test cases <<<   ###
		#       Run FVT test cases
		for FVT_TEST_CASE in ${FVT_TEST_CASES} ; do
			echo "\${WORKING_DIRECTORY}/\${TMP_DIR}/TEST/\${TMP_FILE}/\${FVT_TEST_CASE} >${WORKING_DIRECTORY}/${TMP_DIR}/TEST/${TMP_FILE}/${FVT_TEST_CASE}< \${WORKING_DIRECTORY}/${FILE_NAME} >${WORKING_DIRECTORY}/${FILE_NAME}<"
set -x
			eval $(/home/uadmin/github/BradleyA/docker-security-infrastructure/ssh/check-user-ssh.sh /home/uadmin/github/BradleyA/docker-security-infrastructure/ssh/TEST/check-user-ssh.sh/FVT-option-help-001)
			echo "><><><><><><><><><><><<"
			eval $(${WORKING_DIRECTORY}/${TMP_DIR}/TEST/${TMP_FILE}/${FVT_TEST_CASE} ${WORKING_DIRECTORY}/${FILE_NAME})
set +x
		done
	else
		get_date_stamp ; echo -e "${DATE_STAMP} ${LOCALHOST} ${0}[$$] ${LINENO} ${TMP_DIR}/TEST/${TMP_FILE} directory not found in ${WORKING_DIRECTORY} for ${GIT_AUTHOR_NAME} (${USER})."
	fi
done
