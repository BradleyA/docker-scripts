#!/bin/bash
#	hooks/post-commit  3.314.781  2019-07-26T19:31:15.343051-05:00 (CDT)  https://github.com/BradleyA/docker-security-infrastructure  uadmin  six-rpi3b.cptx86.com 3.313  
#	   testing post-commit #57 
#	hooks/post-commit  3.313.780  2019-07-26T15:52:03.495438-05:00 (CDT)  https://github.com/BradleyA/docker-security-infrastructure  uadmin  six-rpi3b.cptx86.com 3.312  
#	   testing post-commit #57 
#	hooks/post-commit  3.309.776  2019-07-26T15:15:00.108370-05:00 (CDT)  https://github.com/BradleyA/docker-security-infrastructure  uadmin  six-rpi3b.cptx86.com 3.308  
#	   determine how to parse FILE_LIST #57 
###
### production standard 3.0 shellcheck
### production standard 5.1.160 Copyright
#       Copyright (c) 2019 Bradley Allen
#       MIT License is in the online DOCUMENTATION, DOCUMENTATION URL defined below.
### production standard 1.0 DEBUG variable
#       Order of precedence: environment variable, default code
if [ "${DEBUG}" == "" ] ; then DEBUG="0" ; fi   # 0 = debug off, 1 = debug on, 'export DEBUG=1', 'unset DEBUG' to unset environment variable (bash)
#       set -x
#       set -v
BOLD=$(tput -Txterm bold)
NORMAL=$(tput -Txterm sgr0)
###

echo "GIT_AUTHOR_DATE >${GIT_AUTHOR_DATE}<"
echo "GIT_AUTHOR_NAME >${GIT_AUTHOR_NAME}<"
echo "GIT_AUTHOR_EMAIL >${GIT_AUTHOR_EMAIL}<"
echo "GIT_REFLOG_ACTION >${GIT_REFLOG_ACTION}<"
echo "GIT_INDEX_FILE >${GIT_INDEX_FILE}<"

echo "\$GIT_DIR >${GIT_DIR}<"
echo "\$(git rev-parse --git-dir) >$(git rev-parse --git-dir)<"
echo "\$(git rev-parse --show-toplevel) >$(git rev-parse --show-toplevel)<"

echo "pwd >$(pwd)<"

echo "GIT_WORK_TREE >${GIT_WORK_TREE}<"

hook="$(git rev-parse --git-path hooks/post-commit)"
echo "hook >${hook}<"

#       Date and time function ISO 8601
DATE_STAMP=$(date +%Y-%m-%dT%H:%M:%S.%6N%:z)
TEMP=$(date +%Z)
DATE_STAMP="${DATE_STAMP} (${TEMP})"
#       Fully qualified domain name FQDN hostname
LOCALHOST=$(hostname -f)
###
WORKING_DIRECTORY=$(git rev-parse --show-toplevel)

cat ${WORKING_DIRECTORY}/hooks/FILE_LIST > FILE_LIST

echo "\${FILE_LIST} >${FILE_LIST}<"
echo -e "${DATE_STAMP} ${LOCALHOST} ${0}[$$] AAAAA Create ${WORKING_DIRECTORY}/hooks/FILE_LIST file of files that are being commited by ${GIT_AUTHOR_NAME}."
#       Mark each file
for FILE_NAME in ${FILE_LIST} ; do
#		FILE_DIRECTORY=$(sed 's/
		echo -e "${DATE_STAMP} ${LOCALHOST} ${0}[$$] xxxxx Create ${WORKING_DIRECTORY}/hooks/FILE_LIST file of files that are being commited by ${GIT_AUTHOR_NAME}."
	if [ -d ${FILE_NAME}/TEST ] ; then
		echo ">>><<<>>><<"
		echo -e "${DATE_STAMP} ${LOCALHOST} ${0}[$$] yyyyy Create ${WORKING_DIRECTORY}/hooks/FILE_LIST file of files that are being commited by ${GIT_AUTHOR_NAME}."
	fi
done
