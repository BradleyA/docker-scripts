#!/bin/bash
#	hooks/post-commit  3.354.821  2019-07-27T10:46:56.934836-05:00 (CDT)  https://github.com/BradleyA/docker-security-infrastructure  uadmin  six-rpi3b.cptx86.com 3.353  
#	   Bssh/check-user-ssh.sh  BOLD display_help section titles 
#	hooks/post-commit  3.353.820  2019-07-26T23:11:13.120633-05:00 (CDT)  https://github.com/BradleyA/docker-security-infrastructure  uadmin  six-rpi3b.cptx86.com 3.352  
#	   testing post-commit .git/hook for FVT 
#	hooks/post-commit  3.352.819  2019-07-26T23:05:54.034724-05:00 (CDT)  https://github.com/BradleyA/docker-security-infrastructure  uadmin  six-rpi3b.cptx86.com 3.351  
#	   testing post-commit .git/hook for FVT 
#	hooks/post-commit  3.351.818  2019-07-26T22:57:13.931766-05:00 (CDT)  https://github.com/BradleyA/docker-security-infrastructure  uadmin  six-rpi3b.cptx86.com 3.350  
#	   testing post-commit .git/hook for FVT 
#	hooks/post-commit  3.350.817  2019-07-26T22:55:48.735474-05:00 (CDT)  https://github.com/BradleyA/docker-security-infrastructure  uadmin  six-rpi3b.cptx86.com 3.349  
#	   testing post-commit .git/hook for FVT 
#	hooks/post-commit  3.349.816  2019-07-26T22:53:31.224341-05:00 (CDT)  https://github.com/BradleyA/docker-security-infrastructure  uadmin  six-rpi3b.cptx86.com 3.348  
#	   testing post-commit .git/hook for FVT 
#	hooks/post-commit  3.343.810  2019-07-26T22:12:14.587205-05:00 (CDT)  https://github.com/BradleyA/docker-security-infrastructure  uadmin  six-rpi3b.cptx86.com 3.342  
#	   testing post-commit .git/hook for FVT 
#	hooks/post-commit  3.320.787  2019-07-26T19:58:47.273386-05:00 (CDT)  https://github.com/BradleyA/docker-security-infrastructure  uadmin  six-rpi3b.cptx86.com 3.319  
#	   testing hooks pre-commit and post-commit #57 
#	hooks/post-commit  3.309.776  2019-07-26T15:15:00.108370-05:00 (CDT)  https://github.com/BradleyA/docker-security-infrastructure  uadmin  six-rpi3b.cptx86.com 3.308  
#	   determine how to parse FILE_LIST #57 
###
### production standard 3.0 shellcheck
### production standard 5.1.160 Copyright
#       Copyright (c) 2019 Bradley Allen
#       MIT License is in the online DOCUMENTATION, DOCUMENTATION URL defined below.
### production standard 1.0 DEBUG variable
#       Order of precedence: environment variable, default code
if [ "${DEBUG}" == "" ] ; then DEBUG="0" ; fi   # 0 = debug off, 1 = debug on, 'export DEBUG=1', 'unset DEBUG' to unset environment variable (bash)
###

echo "GIT_AUTHOR_DATE >${GIT_AUTHOR_DATE}<"
echo "GIT_AUTHOR_NAME >${GIT_AUTHOR_NAME}<"
echo "GIT_AUTHOR_EMAIL >${GIT_AUTHOR_EMAIL}<"
echo "GIT_REFLOG_ACTION >${GIT_REFLOG_ACTION}<"
echo "GIT_INDEX_FILE >${GIT_INDEX_FILE}<"
echo "\$GIT_DIR >${GIT_DIR}<"
echo "\$(git rev-parse --git-dir) >$(git rev-parse --git-dir)<"
echo "\$(git rev-parse --show-toplevel) >$(git rev-parse --show-toplevel)<"
echo "pwd >$(pwd)<"
echo "GIT_WORK_TREE >${GIT_WORK_TREE}<"
hook="$(git rev-parse --git-path hooks/post-commit)"
echo "hook >${hook}<"

#       Date and time function ISO 8601
get_date_stamp() {
DATE_STAMP=$(date +%Y-%m-%dT%H:%M:%S.%6N%:z)
TEMP=$(date +%Z)
DATE_STAMP="${DATE_STAMP} (${TEMP})"
}

#       Fully qualified domain name FQDN hostname
LOCALHOST=$(hostname -f)

###
POST_WORKING_DIRECTORY=$(git rev-parse --show-toplevel)
POST_FILE_LIST=$(cat "${POST_WORKING_DIRECTORY}"/hooks/FILE_LIST)

echo -e "\${POST_FILE_LIST} >${POST_FILE_LIST}<\n\n"

#	wrong ssh/check-user-ssh.sh/TEST
#       Mark each file
for POST_FILE_NAME in ${POST_FILE_LIST} ; do
	echo "\${POST_FILE_NAME} >${POST_FILE_NAME}<"
	POST_TMP_FILE=$(echo ${POST_FILE_NAME} | rev | cut -d '/' -f 1 | rev)
	echo "\${POST_TMP_FILE} >${POST_TMP_FILE}<"
	POST_TMP_DIR=$(echo ${POST_FILE_NAME} | cut -d '/' -f 1 )
	echo "\${POST_TMP_DIR} >${POST_TMP_DIR}<"
	echo "\${POST_TMP_DIR}/TEST/\${POST_TMP_FILE} >${POST_TMP_DIR}/TEST/${POST_TMP_FILE}<"

	if [ -d ${POST_TMP_DIR}/TEST/${POST_TMP_FILE} ] ; then
		get_date_stamp ; echo -e "${DATE_STAMP} ${LOCALHOST} ${0}[$$] ${LINENO} Located ${POST_TMP_DIR}/TEST/${POST_TMP_FILE} directory in ${POST_WORKING_DIRECTORY} for ${GIT_AUTHOR_NAME} (${USER})."
		POST_FVT_TEST_CASES=$(ls -1 ${POST_TMP_DIR}/TEST/${POST_TMP_FILE} | grep -v "\." | grep FVT)
		echo "\${POST_FVT_TEST_CASES} >${POST_FVT_TEST_CASES}<"
		### >>>	need an if to check is three are FVT test cases <<<   ###
		#       Run FVT test cases
		for POST_FVT_TEST_CASE in ${POST_FVT_TEST_CASES} ; do
			echo "\${POST_WORKING_DIRECTORY}/\${POST_TMP_DIR}/TEST/\${POST_TMP_FILE}/\${POST_FVT_TEST_CASE} >${POST_WORKING_DIRECTORY}/${POST_TMP_DIR}/TEST/${POST_TMP_FILE}/${POST_FVT_TEST_CASE}< \${POST_WORKING_DIRECTORY}/${POST_FILE_NAME} >${POST_WORKING_DIRECTORY}/${POST_FILE_NAME}<"
			echo "\${USER_HOME} >${USER_HOME}<"
			/home/uadmin/github/BradleyA/docker-security-infrastructure/ssh/TEST/check-user-ssh.sh/FVT-option-help-001 /home/uadmin/github/BradleyA/docker-security-infrastructure/ssh/check-user-ssh.sh
			POST_COMMAND=echo "${POST_WORKING_DIRECTORY}/${POST_TMP_DIR}/TEST/${POST_TMP_FILE}/${POST_FVT_TEST_CASE} ${POST_WORKING_DIRECTORY}/${POST_FILE_NAME}"
			eval $(${POST_COMMAND})
			eval $(${POST_WORKING_DIRECTORY}/${POST_TMP_DIR}/TEST/${POST_TMP_FILE}/${POST_FVT_TEST_CASE} ${POST_WORKING_DIRECTORY}/${POST_FILE_NAME})
			exit
			echo "><><><><><><><><><><><<"
			eval $(${POST_WORKING_DIRECTORY}/${POST_TMP_DIR}/TEST/${POST_TMP_FILE}/${POST_FVT_TEST_CASE} ${POST_WORKING_DIRECTORY}/${POST_FILE_NAME})
		done
	else
		get_date_stamp ; echo -e "${DATE_STAMP} ${LOCALHOST} ${0}[$$] ${LINENO} ${POST_TMP_DIR}/TEST/${POST_TMP_FILE} directory not found in ${POST_WORKING_DIRECTORY} for ${GIT_AUTHOR_NAME} (${USER})."
	fi
done
